{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-3 col-10 col-sm-8 col-md-7 col-lg-5 col-xxl-4 border\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"mt-4 mb-3\"\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"간편 회원가입\")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_4 = {\n  class: \"col-9\"\n};\nconst _hoisted_5 = {\n  class: \"col-9 d-flex\"\n};\nconst _hoisted_6 = {\n  class: \"col-12\"\n};\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"col-5\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"col-5\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-success\",\n  style: {\n    \"font-weight\": \"bold\"\n  }\n}, \"중복검사\", -1 /* HOISTED */);\nconst _hoisted_11 = [_hoisted_10];\nconst _hoisted_12 = {\n  key: 0,\n  style: {\n    \"float\": \"left\"\n  }\n};\nconst _hoisted_13 = {\n  class: \"col-9\"\n};\nconst _hoisted_14 = {\n  class: \"col-9 d-flex\"\n};\nconst _hoisted_15 = {\n  class: \"col-12\"\n};\nconst _hoisted_16 = [\"value\"];\nconst _hoisted_17 = {\n  key: 0,\n  class: \"col-5\"\n};\nconst _hoisted_18 = {\n  key: 1,\n  class: \"col-5\"\n};\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"button\",\n  class: \"btn btn-success\",\n  style: {\n    \"font-weight\": \"bold\"\n  }\n}, \"중복검사\", -1 /* HOISTED */);\nconst _hoisted_20 = [_hoisted_19];\nconst _hoisted_21 = {\n  key: 0,\n  style: {\n    \"float\": \"left\"\n  }\n};\nconst _hoisted_22 = {\n  class: \"col-9 mb-2\"\n};\nconst _hoisted_23 = {\n  class: \"col-9 mb-4\"\n};\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"h5\", null, \"기본 배송지 정보\", -1 /* HOISTED */);\nconst _hoisted_25 = {\n  class: \"col-9\"\n};\nconst _hoisted_26 = {\n  class: \"col-9 mt-3\"\n};\nconst _hoisted_27 = {\n  class: \"d-flex\"\n};\nconst _hoisted_28 = {\n  class: \"col-6\"\n};\nconst _hoisted_29 = {\n  class: \"col-6\"\n};\nconst _hoisted_30 = {\n  class: \"d-flex\"\n};\nconst _hoisted_31 = {\n  class: \"col-9 pe-1\"\n};\nconst _hoisted_32 = {\n  class: \"col-3 ps-1\"\n};\nconst _hoisted_33 = {\n  class: \"d-flex\"\n};\nconst _hoisted_34 = {\n  class: \"col-12\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createTextVNode(\" 닉네임 \"), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"input\", {\n    value: _ctx.nickName,\n    onInput: _cache[0] || (_cache[0] = (...args) => _ctx.inputNickName && _ctx.inputNickName(...args)),\n    type: \"text\",\n    class: \"form-control mb-2\",\n    id: \"nickName\",\n    placeholder: \"닉네임\",\n    maxlength: \"8\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_7)]), _ctx.nickNameCheck === false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.checkNick && _ctx.checkNick(...args)),\n    type: \"button\",\n    class: \"btn btn-danger\",\n    style: {\n      \"font-weight\": \"bold\"\n    }\n  }, \"중복검사\")])) : _createCommentVNode(\"v-if\", true), _ctx.nickNameCheck === true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _hoisted_11)) : _createCommentVNode(\"v-if\", true)]), _ctx.existNickName ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, \"이미 존재하는 닉네임입니다.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_13, [_createTextVNode(\" 아이디 \"), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"input\", {\n    value: _ctx.id,\n    onInput: _cache[2] || (_cache[2] = (...args) => _ctx.inputId && _ctx.inputId(...args)),\n    type: \"text\",\n    class: \"form-control mb-2\",\n    id: \"id\",\n    placeholder: \"아이디\"\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_16)]), _ctx.idCheck === false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.checkId && _ctx.checkId(...args)),\n    type: \"button\",\n    class: \"btn btn-danger\",\n    style: {\n      \"font-weight\": \"bold\"\n    }\n  }, \"중복검사\")])) : _createCommentVNode(\"v-if\", true), _ctx.idCheck === true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _hoisted_20)) : _createCommentVNode(\"v-if\", true)]), _ctx.existId ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, \"이미 존재하는 아이디입니다.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_22, [_createTextVNode(\" 비밀번호 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"pw\",\n    placeholder: \"비밀번호 (영문, 숫자 포함 8~20자)\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.pw = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.pw]])]), _createElementVNode(\"div\", _hoisted_23, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control\",\n    id: \"pwCheck\",\n    placeholder: \"비밀번호 확인\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.pwCheck = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.pwCheck]])]), _hoisted_24, _createElementVNode(\"div\", _hoisted_25, [_createTextVNode(\" 성명 \"), _createElementVNode(\"input\", {\n    onInput: _cache[6] || (_cache[6] = (...args) => _ctx.inputName && _ctx.inputName(...args)),\n    type: \"text\",\n    class: \"form-control mb-2\",\n    id: \"name\",\n    placeholder: \"성명\"\n  }, null, 32 /* HYDRATE_EVENTS */), _createTextVNode(\" 휴대폰 번호 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    class: \"form-control mb-2\",\n    id: \"phone-number\",\n    placeholder: \"휴대폰 번호\",\n    maxlength: \"11\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.phoneNum = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.phoneNum]])]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"div\", _hoisted_28, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control mb-2\",\n    id: \"address-num\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.addressNum = $event),\n    placeholder: \"우편번호\",\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.addressNum]])]), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-light border\",\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.inputAddress && _ctx.inputAddress(...args))\n  }, \"우편번호 찾기\")])]), _createElementVNode(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control mb-2\",\n    id: \"address1\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.address = $event),\n    placeholder: \"주소\",\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.address]])]), _createElementVNode(\"div\", _hoisted_32, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control mb-2\",\n    id: \"address3\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.addressName = $event),\n    placeholder: \"\",\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.addressName]])])]), _createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"div\", _hoisted_34, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control mb-2\",\n    id: \"detailAddress\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => _ctx.detailAddress = $event),\n    placeholder: \"상세주소\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.detailAddress]])])]), _createElementVNode(\"button\", {\n    onClick: _cache[13] || (_cache[13] = (...args) => _ctx.sendInf && _ctx.sendInf(...args)),\n    type: \"button\",\n    class: \"btn btn-danger col-12 mt-3 mb-3\",\n    style: {\n      \"font-weight\": \"bold\"\n    }\n  }, \"간편 회원가입\")])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","type","style","_hoisted_10","_hoisted_19","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","value","_ctx","onInput","id","placeholder","maxlength","_hoisted_8","onClick","_hoisted_9","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_17","_hoisted_18","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","readonly","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34"],"sourceRoot":"","sources":["/Users/dino/Library/Mobile Documents/com~apple~CloudDocs/공유/project/tgolshop/frontend/src/components/SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-3 col-10 col-sm-8 col-md-7 col-lg-5 col-xxl-4 border \">\n    <div class=\"mt-4 mb-3\">\n      <h3>간편 회원가입</h3>\n    </div>\n    <div class=\"row justify-content-center\">\n      <div class=\"col-9 \">\n        닉네임\n        <div class=\"col-9 d-flex\">\n          <div class=\"col-12\">\n            <input v-bind:value=\"nickName\" @input=\"inputNickName\" type=\"text\" class=\"form-control mb-2\" id=\"nickName\" placeholder=\"닉네임\" maxlength=\"8\">\n          </div>\n          <div class=\"col-5\" v-if=\"nickNameCheck === false\">\n            <button @click=\"checkNick\" type=\"button\" class=\"btn btn-danger\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n          <div class=\"col-5\" v-if=\"nickNameCheck === true\">\n            <button type=\"button\" class=\"btn btn-success\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n        </div>\n        <div style=\"float:left\" v-if=\"existNickName\">이미 존재하는 닉네임입니다.</div>\n      </div>\n\n      <div class=\"col-9\">\n        아이디\n        <div class=\"col-9 d-flex\">\n          <div class=\"col-12\">\n            <input v-bind:value=\"id\" @input=\"inputId\" type=\"text\" class=\"form-control mb-2\" id=\"id\" placeholder=\"아이디\">\n          </div>\n          <div class=\"col-5\" v-if=\"idCheck === false\">\n            <button @click=\"checkId\" type=\"button\" class=\"btn btn-danger\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n          <div class=\"col-5\" v-if=\"idCheck === true\">\n            <button type=\"button\" class=\"btn btn-success\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n        </div>\n        <div style=\"float:left\" v-if=\"existId\">이미 존재하는 아이디입니다.</div>\n      </div>\n\n      <div class=\"col-9 mb-2\">\n        비밀번호\n        <input type=\"password\" class=\"form-control\" id=\"pw\" placeholder=\"비밀번호 (영문, 숫자 포함 8~20자)\" v-model=\"pw\">\n      </div>\n      <div class=\"col-9 mb-4\">\n        <input type=\"password\" class=\"form-control\" id=\"pwCheck\" placeholder=\"비밀번호 확인\" v-model=\"pwCheck\">\n      </div>\n\n\n      <h5>기본 배송지 정보</h5>\n      <div class=\"col-9 \">\n        성명\n        <input @input=\"inputName\" type=\"text\" class=\"form-control mb-2\" id=\"name\" placeholder=\"성명\">\n        휴대폰 번호\n        <input type=\"tel\" class=\"form-control mb-2\" id=\"phone-number\" placeholder=\"휴대폰 번호\" maxlength=\"11\" v-model=\"phoneNum\">\n      </div>\n      <div class=\"col-9 mt-3\">\n        <div class=\"d-flex\">\n          <div class=\"col-6\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address-num\" v-model=\"addressNum\" placeholder=\"우편번호\" readonly>\n          </div>\n          <div class=\"col-6\">\n            <button  type=\"button\" class=\"btn btn-light border\" @click=\"inputAddress\">우편번호 찾기</button>\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"col-9 pe-1\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address1\" v-model=\"address\" placeholder=\"주소\"  readonly>\n          </div>\n          <div class=\"col-3 ps-1\" >\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address3\" v-model=\"addressName\" placeholder=\"\" readonly>\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"col-12\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"detailAddress\" v-model=\"detailAddress\" placeholder=\"상세주소\">\n          </div>\n          \n        </div>\n        <button @click=\"sendInf\" type=\"button\" class=\"btn btn-danger col-12 mt-3 mb-3\" style=\"font-weight:bold;\">간편 회원가입</button>\n      </div>\n      \n      \n    </div>\n    \n   \n    \n\n  </div>\n  \n</template>\n\n<script>\nimport { ref } from '@vue/reactivity';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { watch } from '@vue/runtime-core';\nexport default {\n  name: 'SignUp',\n\n  setup() {\n    const router = useRouter();\n    let nickNameCheck = ref(false);\n    let existNickName = ref(false);\n    let idCheck = ref(false);\n    let existId = ref(false);\n    let addressNum = ref('');\n    let address = ref('');\n    let addressName = ref('');\n    let detailAddress = ref('');\n    let phoneNum = ref(null);\n    let nickName = ref('');\n    let id = ref('');\n    let pw = ref('');\n    let pwCheck = ref('');\n    let pwValid = ref(false);\n    let name = ref('');\n    let signUpData = ref({\n      nickName : nickName,\n      id : id,\n      pw : pw,\n      name : name,\n      phoneNum : phoneNum,\n      addressNum : addressNum,\n      address : address,\n      addressName : addressName,\n      detailAddress : detailAddress\n    });\n\n    function inputAddress() {\n      new window.daum.Postcode({\n        oncomplete: function(data) {\n          let addr = '';\n          let extraAddr = '';\n          if (data.userSelectedType === 'R') {\n            addr = data.roadAddress;\n          } else {\n            addr = data.jibunAddress;\n          }\n\n          if (data.userSelectedType === 'R') {\n            if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\n              extraAddr += data.bname;\n            }\n\n            if(data.buildingName !== '' && data.apartment === 'Y') {\n              extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\n            }\n\n            if(extraAddr !== '') {\n              extraAddr = ' (' + extraAddr + ')';\n            }\n\n            addressName.value = extraAddr;\n          } else {\n            addressName.value = '';\n          }\n\n          addressNum.value = data.zonecode;\n          address.value = addr;\n          document.getElementById('detailAddress').focus();\n        }\n      }).open();\n    }\n\n    function sendInf() {\n      if (nickName.value === '' || id.value === '' || pw.value === '' || name.value === '' ||\n      phoneNum.value === null || address.value === '' || detailAddress.value === '') {\n        alert('입력되지 않은 항목이 있습니다.');\n      } else if (nickNameCheck.value === false) {\n        alert('닉네임 중복체크를 하지 않았습니다.');\n      } else if (idCheck.value === false) {\n        alert('아이디 중복체크를 하지 않았습니다.');\n      } else {\n        axios.post('/api/customer/sign-up', signUpData.value)\n        .then(res=>{\n          console.log(res.data);\n          if(res.data === 'sign-up success') router.push({path : '/customer/login'});\n        }).catch(err=>{\n          console.log(err);\n        });\n      }\n      \n    }\n\n    function checkNick() {\n      if (nickName.value === '') {\n        alert('닉네임이 입력되지 않았습니다.');\n      } else {\n        console.log(nickName.value);\n        axios.get('/api/customer/sign-up/nick-check?nick=' + nickName.value)\n        .then(res=>{\n          console.log(res.data);\n          if (res.data === 'existed') {\n            existNickName.value = true;\n          } else {\n            existNickName.value = false;\n            nickNameCheck.value = true;\n          }\n        }).catch(err=>{\n          console.log(err);\n        });\n      }\n     \n    }\n\n    function checkId() {\n      if (id.value === '') {\n        alert('아이디가 입력되지 않았습니다.');\n      } else {\n        console.log(id.value);\n        axios.get('/api/customer/sign-up/id-check?id=' + id.value)\n        .then(res=>{\n          console.log(res.data);\n          if (res.data === 'existed') {\n            existId.value = true;\n          } else {\n            existNickName.value = false;\n            idCheck.value = true;\n          }\n        }).catch(err=>{\n          console.log(err);\n        });\n      }\n     \n    }\n\n    function inputNickName(e) {\n      nickNameCheck.value = false;\n      existNickName.value = false;\n      nickName.value = e.target.value;\n    }\n\n    function inputName(e) {\n      name.value = e.target.value;\n    }\n\n    function inputId(e) {\n      idCheck.value = false;\n      existId.value = false;\n      id.value = e.target.value;\n    }\n\n    watch(phoneNum, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      if (isNaN(newValue)) {\n        phoneNum.value = oldValue;\n      }\n    });\n\n    watch(nickName, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      if(blank_pattern.test(newValue) || special_pattern.test(newValue)){\n        alert('특수문자 또는 공백은 포함될 수 없습니다.');\n        nickName.value = oldValue;\n      }\n    })\n\n    watch(id, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      let kor_pattern = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n      if(blank_pattern.test(newValue) || special_pattern.test(newValue) ||\n      kor_pattern.test(newValue)){\n        alert('특수문자, 공백, 한글은 포함될 수 없습니다.');\n        id.value = oldValue;\n      }\n    });\n\n    watch(pw, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      if (blank_pattern.test(newValue) || special_pattern.test(newValue)) {\n        alert('특수문자 또는 공백은 포함될 수 없습니다.');\n        pw.value = oldValue;\n      }\n      if (newValue.length >= )\n\n    })\n\n    \n\n    \n\n\n    return {phoneNum, addressNum, address, addressName, detailAddress, sendInf, inputAddress, nickName, id, pw, pwCheck, name,\n    nickNameCheck, existNickName, idCheck, existId, checkNick, inputNickName, inputName, inputId, checkId};\n  }\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}