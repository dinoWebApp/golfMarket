{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from '@vue/reactivity';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { watch } from '@vue/runtime-core';\nexport default {\n  name: 'SignUp',\n  setup() {\n    const router = useRouter();\n    let nickNameCheck = ref(false);\n    let existNickName = ref(false);\n    let idCheck = ref(false);\n    let existId = ref(false);\n    let addressNum = ref();\n    let address = ref();\n    let addressName = ref();\n    let detailAddress = ref();\n    let phoneNum = ref();\n    let nickName = ref();\n    let id = ref();\n    let pw = ref();\n    let name = ref();\n    let signUpData = ref({\n      nickName: nickName,\n      id: id,\n      pw: pw,\n      name: name,\n      phoneNum: phoneNum,\n      addressNum: addressNum,\n      address: address,\n      addressName: addressName,\n      detailAddress: detailAddress\n    });\n    function inputAddress() {\n      new window.daum.Postcode({\n        oncomplete: function (data) {\n          let addr = '';\n          let extraAddr = '';\n          if (data.userSelectedType === 'R') {\n            addr = data.roadAddress;\n          } else {\n            addr = data.jibunAddress;\n          }\n          if (data.userSelectedType === 'R') {\n            if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\n              extraAddr += data.bname;\n            }\n            if (data.buildingName !== '' && data.apartment === 'Y') {\n              extraAddr += extraAddr !== '' ? ', ' + data.buildingName : data.buildingName;\n            }\n            if (extraAddr !== '') {\n              extraAddr = ' (' + extraAddr + ')';\n            }\n            addressName.value = extraAddr;\n          } else {\n            addressName.value = '';\n          }\n          addressNum.value = data.zonecode;\n          address.value = addr;\n          document.getElementById('detailAddress').focus();\n        }\n      }).open();\n    }\n    function sendInf() {\n      if (nickName.value === undefined || id.value === undefined || pw.value === undefined || name.value === undefined || phoneNum.value === undefined || address.value === undefined || detailAddress.value === undefined) {\n        alert('입력되지 않은 항목이 있습니다.');\n      } else if (nickNameCheck.value === false) {\n        alert('닉네임 중복체크를 하지 않았습니다.');\n      } else if (idCheck.value === false) {\n        alert('아이디 중복체크를 하지 않았습니다.');\n      } else {\n        axios.post('/api/customer/sign-up', signUpData.value).then(res => {\n          console.log(res.data);\n          if (res.data === 'sign-up success') router.push({\n            path: '/customer/login'\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n    function checkNick() {\n      if (nickName.value === undefined) {\n        alert('닉네임이 입력되지 않았습니다.');\n      } else {\n        console.log(nickName.value);\n        axios.get('/api/customer/sign-up/nick-check?nick=' + nickName.value).then(res => {\n          console.log(res.data);\n          if (res.data === 'existed') {\n            existNickName.value = true;\n          } else {\n            existNickName.value = false;\n            nickNameCheck.value = true;\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n    function initCheckN() {\n      nickNameCheck.value = false;\n      existNickName.value = false;\n    }\n    watch(nickName, (newValue, oldValue) => {\n      if (newValue > 10) {\n        console.log({\n          newValue,\n          oldValue\n        });\n        alert('watch check');\n        nickName.value = oldValue;\n      }\n    }, {\n      immediate: true\n    });\n    return {\n      phoneNum,\n      addressNum,\n      address,\n      addressName,\n      detailAddress,\n      sendInf,\n      inputAddress,\n      nickName,\n      id,\n      pw,\n      name,\n      nickNameCheck,\n      existNickName,\n      idCheck,\n      existId,\n      checkNick,\n      initCheckN\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","axios","useRouter","watch","name","setup","router","nickNameCheck","existNickName","idCheck","existId","addressNum","address","addressName","detailAddress","phoneNum","nickName","id","pw","signUpData","inputAddress","window","daum","Postcode","oncomplete","data","addr","extraAddr","userSelectedType","roadAddress","jibunAddress","bname","test","buildingName","apartment","value","zonecode","document","getElementById","focus","open","sendInf","undefined","alert","post","then","res","console","log","push","path","catch","err","checkNick","get","initCheckN","newValue","oldValue","immediate"],"sourceRoot":"","sources":["/Users/dino/Library/Mobile Documents/com~apple~CloudDocs/공유/project/tgolshop/frontend/src/components/SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-3 col-10 col-sm-8 col-md-7 col-lg-5 col-xxl-4 border \">\n    <div class=\"mt-4 mb-3\">\n      <h3>간편 회원가입</h3>\n    </div>\n    <div class=\"row justify-content-center\">\n      <div class=\"col-9 \">\n        닉네임\n        <div class=\"col-9 d-flex\">\n          <div class=\"col-12\">\n            <input @input=\"initCheckN\" type=\"text\" class=\"form-control mb-2\" id=\"nickName\" placeholder=\"닉네임\" maxlength=\"8\" v-model=\"nickName\">\n          </div>\n          <div class=\"col-5\" v-if=\"nickNameCheck === false\">\n            <button @click=\"checkNick\" type=\"button\" class=\"btn btn-danger\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n          <div class=\"col-5\" v-if=\"nickNameCheck === true\">\n            <button type=\"button\" class=\"btn btn-success\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n        </div>\n        <div style=\"float:left\" v-if=\"existNickName\">이미 존재하는 닉네임입니다.</div>\n      </div>\n\n      <div class=\"col-9\">\n        아이디\n        <div class=\"col-9 d-flex\">\n          <div class=\"col-12\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"id\" placeholder=\"아이디\" v-model=\"id\">\n          </div>\n          <div class=\"col-5\" v-if=\"idCheck === false\">\n            <button type=\"button\" class=\"btn btn-danger\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n          <div class=\"col-5\" v-if=\"idCheck === true\">\n            <button type=\"button\" class=\"btn btn-success\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n        </div>\n        <div style=\"float:left\" v-if=\"existId\">이미 존재하는 아이디입니다.</div>\n      </div>\n\n      <div class=\"col-9 mb-4\">\n        패스워드\n        <input type=\"text\" class=\"form-control\" id=\"pw\" placeholder=\"패스워드\" v-model=\"pw\">\n      </div>\n      <h5>기본 배송지 정보</h5>\n      <div class=\"col-9 \">\n        성명\n        <input type=\"text\" class=\"form-control mb-2\" id=\"name\" placeholder=\"성명\" v-model=\"name\">\n        휴대폰 번호\n        <input type=\"tel\" class=\"form-control mb-2\" id=\"phone-number\" placeholder=\"휴대폰 번호\" maxlength=\"11\" v-model=\"phoneNum\">\n      </div>\n      <div class=\"col-9 mt-3\">\n        <div class=\"d-flex\">\n          <div class=\"col-6\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address-num\" v-model=\"addressNum\" placeholder=\"우편번호\" readonly>\n          </div>\n          <div class=\"col-6\">\n            <button  type=\"button\" class=\"btn btn-light border\" @click=\"inputAddress\">우편번호 찾기</button>\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"col-9 pe-1\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address1\" v-model=\"address\" placeholder=\"주소\"  readonly>\n          </div>\n          <div class=\"col-3 ps-1\" >\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address3\" v-model=\"addressName\" placeholder=\"\" readonly>\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"col-12\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"detailAddress\" v-model=\"detailAddress\" placeholder=\"상세주소\">\n          </div>\n          \n        </div>\n        <button @click=\"sendInf\" type=\"button\" class=\"btn btn-danger col-12 mt-3 mb-3\" style=\"font-weight:bold;\">간편 회원가입</button>\n      </div>\n      \n      \n    </div>\n    \n   \n    \n\n  </div>\n  \n</template>\n\n<script>\nimport { ref } from '@vue/reactivity';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { watch } from '@vue/runtime-core';\nexport default {\n  name: 'SignUp',\n\n  setup() {\n    const router = useRouter();\n    let nickNameCheck = ref(false);\n    let existNickName = ref(false);\n    let idCheck = ref(false);\n    let existId = ref(false);\n    let addressNum = ref();\n    let address = ref();\n    let addressName = ref();\n    let detailAddress = ref();\n    let phoneNum = ref();\n    let nickName = ref();\n    let id = ref();\n    let pw = ref();\n    let name = ref();\n    let signUpData = ref({\n      nickName : nickName,\n      id : id,\n      pw : pw,\n      name : name,\n      phoneNum : phoneNum,\n      addressNum : addressNum,\n      address : address,\n      addressName : addressName,\n      detailAddress : detailAddress\n    });\n\n    function inputAddress() {\n      new window.daum.Postcode({\n        oncomplete: function(data) {\n          let addr = '';\n          let extraAddr = '';\n          if (data.userSelectedType === 'R') {\n            addr = data.roadAddress;\n          } else {\n            addr = data.jibunAddress;\n          }\n\n          if (data.userSelectedType === 'R') {\n            if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\n              extraAddr += data.bname;\n            }\n\n            if(data.buildingName !== '' && data.apartment === 'Y') {\n              extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\n            }\n\n            if(extraAddr !== '') {\n              extraAddr = ' (' + extraAddr + ')';\n            }\n\n            addressName.value = extraAddr;\n          } else {\n            addressName.value = '';\n          }\n\n          addressNum.value = data.zonecode;\n          address.value = addr;\n          document.getElementById('detailAddress').focus();\n        }\n      }).open();\n    }\n\n    function sendInf() {\n      if (nickName.value === undefined || id.value === undefined || pw.value === undefined || name.value === undefined ||\n      phoneNum.value === undefined || address.value === undefined || detailAddress.value === undefined) {\n        alert('입력되지 않은 항목이 있습니다.');\n      } else if (nickNameCheck.value === false) {\n        alert('닉네임 중복체크를 하지 않았습니다.');\n      } else if (idCheck.value === false) {\n        alert('아이디 중복체크를 하지 않았습니다.');\n      } else {\n        axios.post('/api/customer/sign-up', signUpData.value)\n        .then(res=>{\n          console.log(res.data);\n          if(res.data === 'sign-up success') router.push({path : '/customer/login'});\n        }).catch(err=>{\n          console.log(err);\n        });\n      }\n      \n    }\n\n    function checkNick() {\n      if (nickName.value === undefined) {\n        alert('닉네임이 입력되지 않았습니다.');\n      } else {\n        console.log(nickName.value);\n        axios.get('/api/customer/sign-up/nick-check?nick=' + nickName.value)\n        .then(res=>{\n          console.log(res.data);\n          if (res.data === 'existed') {\n            existNickName.value = true;\n          } else {\n            existNickName.value = false;\n            nickNameCheck.value = true;\n          }\n        }).catch(err=>{\n          console.log(err);\n        });\n      }\n     \n    }\n\n    function initCheckN() {\n      nickNameCheck.value = false;\n      existNickName.value = false;\n    }\n\n    watch(nickName, (newValue, oldValue)=>{\n      if (newValue > 10) {\n        console.log({newValue, oldValue})\n        alert('watch check');\n        nickName.value = oldValue;\n      }\n    }, {immediate : true});\n\n    return {phoneNum, addressNum, address, addressName, detailAddress, sendInf, inputAddress, nickName, id, pw, name,\n    nickNameCheck, existNickName, idCheck, existId, checkNick, initCheckN};\n  }\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}