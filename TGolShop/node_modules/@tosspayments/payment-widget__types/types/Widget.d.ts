import { AgreementStatus, PaymentWidgetOptions } from '@tosspayments/payment-widget-types';
import { PaymentRequest, PaymentRequestWithoutUrl } from '@tosspayments/payment__types';
declare type PaymentRequestParameters = Omit<PaymentRequest, 'amount'> | Omit<PaymentRequestWithoutUrl, 'amount'>;
declare function PaymentWidget(clientKey: string, rawCustomerKey: string, options?: PaymentWidgetOptions): {
    renderPaymentMethods: (selector: string, amount: number) => {
        updateAmount: (amount: number, reason: string | string[]) => void;
        UPDATE_REASON: {
            COUPON: string;
            POINT: string;
        };
        on: (eventName: string, callback: (selectedPaymentMethod: string) => unknown) => void;
        __getSelectedPaymentMethods: () => ValueOf<{
            readonly 카드: "CARD";
            readonly 가상계좌: "VIRTUAL_ACCOUNT";
            readonly 휴대폰: "MOBILE_PHONE";
            readonly 토스페이: "TOSSPAY";
            readonly 토스결제: "TOSSPAY";
            readonly 계좌이체: "TRANSFER";
            readonly 문화상품권: "CULTURE_GIFT_CERTIFICATE";
            readonly 게임문화상품권: "GAME_GIFT_CERTIFICATE";
            readonly 도서문화상품권: "BOOK_GIFT_CERTIFICATE";
            readonly 해외간편결제: "FOREIGN_EASY_PAY";
            readonly 미선택: "";
        }>;
    };
    renderAgreement: (selector: string) => {
        on: (eventName: string, callback: (params: AgreementStatus) => void) => void;
        getAgreementStatus: () => AgreementStatus;
    };
    requestPayment: (parameters: PaymentRequestParameters) => Promise<import("@sdk/payment/src/payment/requestPayment").RequestPaymentResult | undefined>;
    requestPaymentForNativeSDK: (parameters: PaymentRequestParameters) => Promise<void>;
};
declare namespace PaymentWidget {
    var ANONYMOUS: "@@ANONYMOUS";
}
export declare type PaymentWidgetConstructor = typeof PaymentWidget;
export declare type PaymentWidgetInstance = ReturnType<PaymentWidgetConstructor>;
declare global {
    interface Window {
        PaymentWidget?: PaymentWidgetConstructor;
    }
}
export default PaymentWidget;
