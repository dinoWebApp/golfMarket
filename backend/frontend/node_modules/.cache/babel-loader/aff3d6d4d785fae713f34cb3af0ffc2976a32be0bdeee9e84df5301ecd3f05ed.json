{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from '@vue/reactivity';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { watch } from '@vue/runtime-core';\nexport default {\n  name: 'SignUp',\n  setup() {\n    const router = useRouter();\n    let nickNameCheck = ref(false);\n    let existNickName = ref(false);\n    let idCheck = ref(false);\n    let existId = ref(false);\n    let addressNum = ref('');\n    let address = ref('');\n    let addressName = ref('');\n    let detailAddress = ref('');\n    let phoneNum = ref(null);\n    let phoneNumValid = ref(false);\n    let nickName = ref('');\n    let id = ref('');\n    let pw = ref('');\n    let pwCheck = ref('');\n    let pwValid = ref(false);\n    let pwCheckValid = ref(false);\n    let name = ref('');\n    let signUpData = ref({\n      nickName: nickName,\n      id: id,\n      pw: pw,\n      name: name,\n      phoneNum: phoneNum,\n      addressNum: addressNum,\n      address: address,\n      addressName: addressName,\n      detailAddress: detailAddress\n    });\n    function inputAddress() {\n      new window.daum.Postcode({\n        oncomplete: function (data) {\n          let addr = '';\n          let extraAddr = '';\n          if (data.userSelectedType === 'R') {\n            addr = data.roadAddress;\n          } else {\n            addr = data.jibunAddress;\n          }\n          if (data.userSelectedType === 'R') {\n            if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\n              extraAddr += data.bname;\n            }\n            if (data.buildingName !== '' && data.apartment === 'Y') {\n              extraAddr += extraAddr !== '' ? ', ' + data.buildingName : data.buildingName;\n            }\n            if (extraAddr !== '') {\n              extraAddr = ' (' + extraAddr + ')';\n            }\n            addressName.value = extraAddr;\n          } else {\n            addressName.value = '';\n          }\n          addressNum.value = data.zonecode;\n          address.value = addr;\n          document.getElementById('detailAddress').focus();\n        }\n      }).open();\n    }\n    function sendInf() {\n      if (nickName.value === '' || id.value === '' || pw.value === '' || name.value === '' || phoneNum.value === null || address.value === '') {\n        alert('입력되지 않은 항목이 있습니다.');\n      } else if (nickNameCheck.value === false) {\n        alert('닉네임 중복검사를 하지 않았습니다.');\n      } else if (idCheck.value === false) {\n        alert('아이디 중복검사를 하지 않았습니다.');\n      } else if (pwValid.value === false) {\n        alert('비밀번호는 8~20자를 입력해야 합니다.');\n      } else if (pwCheckValid.value === false) {\n        alert(\"'비밀번호'와 '비밀번호 확인'이 일치하지 않습니다.\");\n      } else if (phoneNumValid.value === false) {\n        alert('휴대폰 번호는 10~11자를 입력해야 합니다.');\n      } else if (detailAddress.value === '') {\n        alert('상세주소가 입력되지 않았습니다.');\n      } else {\n        axios.post('/api/customer/sign-up', signUpData.value).then(res => {\n          console.log(res.data);\n          if (res.data === 'sign-up success') {\n            router.push({\n              path: '/customer/login'\n            });\n          } else alert('이미 등록된 휴대폰 번호입니다.');\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n    function checkNick() {\n      if (nickName.value === '') {\n        alert('닉네임이 입력되지 않았습니다.');\n      } else {\n        console.log(nickName.value);\n        axios.get('/api/customer/sign-up/nick-check?nick=' + nickName.value).then(res => {\n          console.log(res.data);\n          if (res.data === 'existed') {\n            existNickName.value = true;\n          } else {\n            existNickName.value = false;\n            nickNameCheck.value = true;\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n    function checkId() {\n      if (id.value === '') {\n        alert('아이디가 입력되지 않았습니다.');\n      } else {\n        console.log(id.value);\n        axios.get('/api/customer/sign-up/id-check?id=' + id.value).then(res => {\n          console.log(res.data);\n          if (res.data === 'existed') {\n            existId.value = true;\n          } else {\n            existNickName.value = false;\n            idCheck.value = true;\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n    function inputNickName(e) {\n      nickNameCheck.value = false;\n      existNickName.value = false;\n      nickName.value = e.target.value;\n    }\n    function inputName(e) {\n      name.value = e.target.value;\n    }\n    function inputId(e) {\n      idCheck.value = false;\n      existId.value = false;\n      id.value = e.target.value;\n    }\n    function inputPhoneNum(e) {\n      phoneNum.value = e.target.value;\n    }\n    watch(phoneNum, (newValue, oldValue) => {\n      console.log({\n        newValue,\n        oldValue\n      });\n      let blank_pattern = /[\\s]/g;\n      if (isNaN(newValue) || blank_pattern.test(newValue)) {\n        phoneNum.value = oldValue;\n      }\n      if (newValue.length === 10 || newValue.length === 11) {\n        phoneNumValid.value = true;\n      } else phoneNumValid.value = false;\n      if (newValue === '') {\n        document.getElementById('phoneNum').style.borderColor = '';\n        document.getElementById('phoneNum').style.borderWidth = '';\n      } else if (phoneNumValid.value === true) {\n        document.getElementById('phoneNum').style.borderColor = 'green';\n        document.getElementById('phoneNum').style.borderWidth = '2px';\n      } else if (phoneNumValid.value === false) {\n        document.getElementById('phoneNum').style.borderColor = 'red';\n        document.getElementById('phoneNum').style.borderWidth = '2px';\n      }\n    });\n    watch(nickName, (newValue, oldValue) => {\n      console.log({\n        newValue,\n        oldValue\n      });\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      if (blank_pattern.test(newValue) || special_pattern.test(newValue)) {\n        alert('특수문자 또는 공백은 포함될 수 없습니다.');\n        nickName.value = oldValue;\n      }\n    });\n    watch(id, (newValue, oldValue) => {\n      console.log({\n        newValue,\n        oldValue\n      });\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      let kor_pattern = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n      if (blank_pattern.test(newValue) || special_pattern.test(newValue) || kor_pattern.test(newValue)) {\n        alert('한글, 특수문자, 공백은 포함될 수 없습니다.');\n        id.value = oldValue;\n      }\n    });\n    watch(pw, (newValue, oldValue) => {\n      console.log({\n        newValue,\n        oldValue\n      });\n      if (newValue.length >= 8 && newValue.length <= 20) {\n        pwValid.value = true;\n      } else pwValid.value = false;\n      if (newValue === '') {\n        document.getElementById('pw').style.borderColor = '';\n        document.getElementById('pw').style.borderWidth = '';\n      } else if (pwValid.value === true) {\n        document.getElementById('pw').style.borderColor = 'green';\n        document.getElementById('pw').style.borderWidth = '2px';\n      } else if (pwValid.value === false) {\n        document.getElementById('pw').style.borderColor = 'red';\n        document.getElementById('pw').style.borderWidth = '2px';\n      }\n    });\n    watch(pwCheck, (newValue, oldValue) => {\n      console.log({\n        newValue,\n        oldValue\n      });\n      if (newValue === '') {\n        pwCheckValid.value = false;\n        document.getElementById('pwCheck').style.borderColor = '';\n        document.getElementById('pwCheck').style.borderWidth = '';\n      } else if (newValue === pw.value) {\n        pwCheckValid.value = true;\n        document.getElementById('pwCheck').style.borderColor = 'green';\n        document.getElementById('pwCheck').style.borderWidth = '2px';\n      } else if (newValue !== pw.value) {\n        pwCheckValid.value = false;\n        document.getElementById('pwCheck').style.borderColor = 'red';\n        document.getElementById('pwCheck').style.borderWidth = '2px';\n      }\n    });\n    watch(name, (newValue, oldValue) => {\n      console.log({\n        newValue,\n        oldValue\n      });\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      let num_pattern = /[0-9]/;\n      if (blank_pattern.test(newValue) || special_pattern.test(newValue) || num_pattern.test(newValue)) {\n        alert('특수문자, 공백, 숫자는 포함될 수 없습니다.');\n        name.value = oldValue;\n      }\n    });\n    return {\n      phoneNum,\n      addressNum,\n      address,\n      addressName,\n      detailAddress,\n      sendInf,\n      inputAddress,\n      nickName,\n      id,\n      pw,\n      pwCheck,\n      pwValid,\n      name,\n      nickNameCheck,\n      existNickName,\n      idCheck,\n      existId,\n      checkNick,\n      inputNickName,\n      inputPhoneNum,\n      inputName,\n      inputId,\n      checkId\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","axios","useRouter","watch","name","setup","router","nickNameCheck","existNickName","idCheck","existId","addressNum","address","addressName","detailAddress","phoneNum","phoneNumValid","nickName","id","pw","pwCheck","pwValid","pwCheckValid","signUpData","inputAddress","window","daum","Postcode","oncomplete","data","addr","extraAddr","userSelectedType","roadAddress","jibunAddress","bname","test","buildingName","apartment","value","zonecode","document","getElementById","focus","open","sendInf","alert","post","then","res","console","log","push","path","catch","err","checkNick","get","checkId","inputNickName","e","target","inputName","inputId","inputPhoneNum","newValue","oldValue","blank_pattern","isNaN","length","style","borderColor","borderWidth","special_pattern","kor_pattern","num_pattern"],"sourceRoot":"","sources":["/Users/dino/Library/Mobile Documents/com~apple~CloudDocs/공유/project/tgolshop/frontend/src/components/SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-3 col-10 col-sm-8 col-md-7 col-lg-5 col-xxl-4 border \">\n    <div class=\"mt-4 mb-3\">\n      <h3>간편 회원가입</h3>\n    </div>\n    <div class=\"row justify-content-center\">\n      <div class=\"col-9 \">\n        닉네임\n        <div class=\"col-9 d-flex\">\n          <div class=\"col-12\">\n            <input v-bind:value=\"nickName\" @input=\"inputNickName\" type=\"text\" class=\"form-control mb-2\" id=\"nickName\" placeholder=\"닉네임 (5자 이내)\" maxlength=\"8\">\n          </div>\n          <div class=\"col-5\" v-if=\"nickNameCheck === false\">\n            <button @click=\"checkNick\" type=\"button\" class=\"btn btn-danger\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n          <div class=\"col-5\" v-if=\"nickNameCheck === true\">\n            <button type=\"button\" class=\"btn btn-success\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n        </div>\n        <div style=\"float:left\" v-if=\"existNickName\">이미 존재하는 닉네임입니다.</div>\n      </div>\n\n      <div class=\"col-9\">\n        아이디\n        <div class=\"col-9 d-flex\">\n          <div class=\"col-12\">\n            <input v-bind:value=\"id\" @input=\"inputId\" type=\"text\" class=\"form-control mb-2\" id=\"id\" placeholder=\"아이디\" maxlength=\"15\">\n          </div>\n          <div class=\"col-5\" v-if=\"idCheck === false\">\n            <button @click=\"checkId\" type=\"button\" class=\"btn btn-danger\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n          <div class=\"col-5\" v-if=\"idCheck === true\">\n            <button type=\"button\" class=\"btn btn-success\" style=\"font-weight:bold;\">중복검사</button>\n          </div>\n        </div>\n        <div style=\"float:left\" v-if=\"existId\">이미 존재하는 아이디입니다.</div>\n      </div>\n      <div class=\"col-9 mb-2\">\n        비밀번호\n        <input type=\"password\" class=\"form-control\" id=\"pw\" placeholder=\"비밀번호 (8~20자)\" v-model=\"pw\" autocomplete=\"off\" maxlength=\"20\">\n      </div>\n      <div class=\"col-9 mb-4\">\n        <input type=\"password\" class=\"form-control\" id=\"pwCheck\" placeholder=\"비밀번호 확인\" v-model=\"pwCheck\" autocomplete=\"off\" maxlength=\"20\">\n      </div>\n\n\n      <h5>기본 배송지 정보</h5>\n      <div class=\"col-9 \">\n        성명\n        <input v-bind:value=\"name\" @input=\"inputName\" type=\"text\" class=\"form-control mb-2\" id=\"name\" placeholder=\"성명\" maxlength=\"6\">\n        휴대폰 번호\n        <input v-bind:value=\"phoneNum\" @input=\"inputPhoneNum\" type=\"tel\" class=\"form-control mb-2\" id=\"phoneNum\" placeholder=\"휴대폰 번호 (10~11자)\" maxlength=\"11\">\n      </div>\n      <div class=\"col-9 mt-3\">\n        <div class=\"d-flex\">\n          <div class=\"col-6\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address-num\" v-model=\"addressNum\" placeholder=\"우편번호\" readonly>\n          </div>\n          <div class=\"col-6\">\n            <button  type=\"button\" class=\"btn btn-light border\" @click=\"inputAddress\">우편번호 찾기</button>\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"col-9 pe-1\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address1\" v-model=\"address\" placeholder=\"주소\"  readonly>\n          </div>\n          <div class=\"col-3 ps-1\" >\n            <input type=\"text\" class=\"form-control mb-2\" id=\"address3\" v-model=\"addressName\" placeholder=\"\" readonly>\n          </div>\n        </div>\n        <div class=\"d-flex\">\n          <div class=\"col-12\">\n            <input type=\"text\" class=\"form-control mb-2\" id=\"detailAddress\" v-model=\"detailAddress\" placeholder=\"상세주소\" maxlength=\"25\">\n          </div>\n          \n        </div>\n        <button @click=\"sendInf\" type=\"button\" class=\"btn btn-danger col-12 mt-3 mb-3\" style=\"font-weight:bold;\">간편 회원가입</button>\n      </div>\n      \n      \n    </div>\n    \n   \n    \n\n  </div>\n  \n</template>\n\n<script>\nimport { ref } from '@vue/reactivity';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { watch } from '@vue/runtime-core';\nexport default {\n  name: 'SignUp',\n\n  setup() {\n    const router = useRouter();\n    let nickNameCheck = ref(false);\n    let existNickName = ref(false);\n    let idCheck = ref(false);\n    let existId = ref(false);\n    let addressNum = ref('');\n    let address = ref('');\n    let addressName = ref('');\n    let detailAddress = ref('');\n    let phoneNum = ref(null);\n    let phoneNumValid = ref(false);\n    let nickName = ref('');\n    let id = ref('');\n    let pw = ref('');\n    let pwCheck = ref('');\n    let pwValid = ref(false);\n    let pwCheckValid = ref(false);\n    let name = ref('');\n    let signUpData = ref({\n      nickName : nickName,\n      id : id,\n      pw : pw,\n      name : name,\n      phoneNum : phoneNum,\n      addressNum : addressNum,\n      address : address,\n      addressName : addressName,\n      detailAddress : detailAddress\n    });\n\n    function inputAddress() {\n      new window.daum.Postcode({\n        oncomplete: function(data) {\n          let addr = '';\n          let extraAddr = '';\n          if (data.userSelectedType === 'R') {\n            addr = data.roadAddress;\n          } else {\n            addr = data.jibunAddress;\n          }\n\n          if (data.userSelectedType === 'R') {\n            if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\n              extraAddr += data.bname;\n            }\n\n            if(data.buildingName !== '' && data.apartment === 'Y') {\n              extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\n            }\n\n            if(extraAddr !== '') {\n              extraAddr = ' (' + extraAddr + ')';\n            }\n\n            addressName.value = extraAddr;\n          } else {\n            addressName.value = '';\n          }\n\n          addressNum.value = data.zonecode;\n          address.value = addr;\n          document.getElementById('detailAddress').focus();\n        }\n      }).open();\n    }\n\n    function sendInf() {\n      if (nickName.value === '' || id.value === '' || pw.value === '' || name.value === '' ||\n      phoneNum.value === null || address.value === '') {\n        alert('입력되지 않은 항목이 있습니다.');\n      } else if (nickNameCheck.value === false) {\n        alert('닉네임 중복검사를 하지 않았습니다.');\n      } else if (idCheck.value === false) {\n        alert('아이디 중복검사를 하지 않았습니다.');\n      } else if (pwValid.value === false) {\n        alert('비밀번호는 8~20자를 입력해야 합니다.')\n      } else if (pwCheckValid.value === false) {\n        alert(\"'비밀번호'와 '비밀번호 확인'이 일치하지 않습니다.\");\n      } else if (phoneNumValid.value === false) {\n        alert('휴대폰 번호는 10~11자를 입력해야 합니다.')\n      } else if (detailAddress.value === '') {\n        alert('상세주소가 입력되지 않았습니다.');\n      } else {\n        axios.post('/api/customer/sign-up', signUpData.value)\n        .then(res=>{\n          console.log(res.data);\n          if(res.data === 'sign-up success') {\n            router.push({path : '/customer/login'});\n          } else alert('이미 등록된 휴대폰 번호입니다.')\n        }).catch(err=>{\n          console.log(err);\n        });\n      }\n      \n    }\n\n    function checkNick() {\n      if (nickName.value === '') {\n        alert('닉네임이 입력되지 않았습니다.');\n      } else {\n        console.log(nickName.value);\n        axios.get('/api/customer/sign-up/nick-check?nick=' + nickName.value)\n        .then(res=>{\n          console.log(res.data);\n          if (res.data === 'existed') {\n            existNickName.value = true;\n          } else {\n            existNickName.value = false;\n            nickNameCheck.value = true;\n          }\n        }).catch(err=>{\n          console.log(err);\n        });\n      }\n     \n    }\n\n    function checkId() {\n      if (id.value === '') {\n        alert('아이디가 입력되지 않았습니다.');\n      } else {\n        console.log(id.value);\n        axios.get('/api/customer/sign-up/id-check?id=' + id.value)\n        .then(res=>{\n          console.log(res.data);\n          if (res.data === 'existed') {\n            existId.value = true;\n          } else {\n            existNickName.value = false;\n            idCheck.value = true;\n          }\n        }).catch(err=>{\n          console.log(err);\n        });\n      }\n     \n    }\n\n    function inputNickName(e) {\n      nickNameCheck.value = false;\n      existNickName.value = false;\n      nickName.value = e.target.value;\n    }\n\n    function inputName(e) {\n      name.value = e.target.value;\n    }\n\n    function inputId(e) {\n      idCheck.value = false;\n      existId.value = false;\n      id.value = e.target.value;\n    }\n\n    function inputPhoneNum(e) {\n      phoneNum.value = e.target.value;\n    }\n\n    watch(phoneNum, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      let blank_pattern = /[\\s]/g;\n      if (isNaN(newValue) || blank_pattern.test(newValue) ) {\n        phoneNum.value = oldValue;\n      }\n      if (newValue.length === 10 || newValue.length === 11) {\n        phoneNumValid.value = true;\n      } else phoneNumValid.value = false;\n\n      if (newValue === '') {\n        document.getElementById('phoneNum').style.borderColor = '';\n        document.getElementById('phoneNum').style.borderWidth = '';\n      } else if (phoneNumValid.value === true) {\n        document.getElementById('phoneNum').style.borderColor = 'green';\n        document.getElementById('phoneNum').style.borderWidth = '2px';\n      } else if (phoneNumValid.value === false) {\n        document.getElementById('phoneNum').style.borderColor = 'red';\n        document.getElementById('phoneNum').style.borderWidth = '2px';\n      }\n\n    });\n\n    watch(nickName, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      if(blank_pattern.test(newValue) || special_pattern.test(newValue)){\n        alert('특수문자 또는 공백은 포함될 수 없습니다.');\n        nickName.value = oldValue;\n      }\n    })\n\n    watch(id, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      let kor_pattern = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n      if(blank_pattern.test(newValue) || special_pattern.test(newValue) ||\n      kor_pattern.test(newValue)){\n        alert('한글, 특수문자, 공백은 포함될 수 없습니다.');\n        id.value = oldValue;\n      }\n    });\n\n    watch(pw, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      if (newValue.length >= 8 && newValue.length <= 20) {\n        pwValid.value = true;\n      } else pwValid.value = false;\n      if (newValue === '') {\n        document.getElementById('pw').style.borderColor = '';\n        document.getElementById('pw').style.borderWidth = '';\n      } else if(pwValid.value === true) {\n        document.getElementById('pw').style.borderColor = 'green';\n        document.getElementById('pw').style.borderWidth = '2px';\n      } else if(pwValid.value === false) {\n        document.getElementById('pw').style.borderColor = 'red';\n        document.getElementById('pw').style.borderWidth = '2px';\n      }\n    });\n\n    watch(pwCheck, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n\n      if (newValue === '') {\n        pwCheckValid.value = false;\n        document.getElementById('pwCheck').style.borderColor = '';\n        document.getElementById('pwCheck').style.borderWidth = '';\n      } else if(newValue === pw.value) {\n        pwCheckValid.value = true;\n        document.getElementById('pwCheck').style.borderColor = 'green';\n        document.getElementById('pwCheck').style.borderWidth = '2px';\n      } else if(newValue !== pw.value) {\n        pwCheckValid.value = false;\n        document.getElementById('pwCheck').style.borderColor = 'red';\n        document.getElementById('pwCheck').style.borderWidth = '2px';\n      }\n    });\n\n    watch(name, (newValue, oldValue)=>{\n      console.log({newValue, oldValue});\n      let blank_pattern = /[\\s]/g;\n      let special_pattern = /[~!@#$%^&*()_+|<>?:{}]/;\n      let num_pattern = /[0-9]/;\n      if(blank_pattern.test(newValue) || special_pattern.test(newValue) ||\n      num_pattern.test(newValue)){\n        alert('특수문자, 공백, 숫자는 포함될 수 없습니다.');\n        name.value = oldValue;\n      }\n    })\n\n    \n\n    \n\n\n    return {phoneNum, addressNum, address, addressName, detailAddress, sendInf, inputAddress, nickName, id, pw, pwCheck, pwValid,\n    name, nickNameCheck, existNickName, idCheck, existId, checkNick, inputNickName, inputPhoneNum, inputName, inputId, checkId};\n  }\n\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}