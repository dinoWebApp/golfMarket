{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from '@vue/reactivity';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'LoginPage',\n  emits: ['loginData'],\n  setup(props, {\n    emit\n  }) {\n    const router = useRouter();\n    let id = ref();\n    let pw = ref();\n    let loginData = ref({\n      id: id,\n      pw: pw\n    });\n    let loginModal = ref(true);\n    let findIdModal = ref(false);\n    let findPwModal = ref(false);\n    let nickName = ref('');\n    let phoneNum = ref('');\n    let getId = ref('');\n    let getIdModal = ref(false);\n    let changedPw = ref('');\n    let changePwModal = ref(false);\n    axios.get('/api/customer/login-check').then(res => {\n      console.log(res.data);\n      if (res.data !== 'not login') {\n        router.push({\n          path: '/'\n        });\n      }\n    });\n    function signUp() {\n      router.push({\n        path: '/customer/sign-up'\n      });\n    }\n    function login() {\n      axios.post('/api/customer/login', loginData.value).then(res => {\n        console.log(res.data);\n        if (res.data === 'login fail') {\n          alert('아이디 또는 비밀번호가 일치하지 않습니다.');\n        } else {\n          emit('loginData', [res.data, false, true]);\n          router.push({\n            path: '/'\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n    function findId() {\n      findIdModal.value = true;\n      findPwModal.value = false;\n      loginModal.value = false;\n    }\n    function inputNickName(e) {\n      nickName.value = e.target.value;\n    }\n    function findIdSubmit() {\n      if (nickName.value === '' || phoneNum.value === '') {\n        alert('정보를 모두 입력해 주십시오');\n      } else {\n        axios.get('/api/customer/findId?nickName=' + nickName.value + \"&phoneNum=\" + phoneNum.value).then(result => {\n          if (result.data === 'wrong nickName') {\n            alert('존재하지 않는 닉네임입니다.');\n          } else if (result.data === 'wrong phoneNum') {\n            alert('휴대폰 번호가 일치하지 않습니다.');\n          } else {\n            getId.value = result.data;\n            findIdModal.value = false;\n            getIdModal.value = true;\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n    function backPage() {\n      findIdModal.value = false;\n      loginModal.value = true;\n    }\n    function clickLoginModal() {\n      loginModal.value = true;\n      getIdModal.value = false;\n      changePwModal.value = false;\n    }\n    return {\n      signUp,\n      login,\n      id,\n      pw,\n      findIdModal,\n      findPwModal,\n      loginModal,\n      findId,\n      nickName,\n      phoneNum,\n      inputNickName,\n      findIdSubmit,\n      backPage,\n      getId,\n      getIdModal,\n      changedPw,\n      changePwModal\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","useRouter","axios","name","emits","setup","props","emit","router","id","pw","loginData","loginModal","findIdModal","findPwModal","nickName","phoneNum","getId","getIdModal","changedPw","changePwModal","get","then","res","console","log","data","push","path","signUp","login","post","value","alert","catch","err","findId","inputNickName","e","target","findIdSubmit","result","backPage","clickLoginModal"],"sourceRoot":"","sources":["/Users/kgj/Desktop/project/market-project/golfMarket/frontend/src/components/LoginPage.vue"],"sourcesContent":["<template>\n  <div v-if=\"loginModal\" class=\"container mt-3 col-9 col-sm-7 col-md-6 col-lg-5 col-xxl-4 border\">\n    <div class=\"mt-5\">\n      <img class=\"mb-4 col-6 col-md-6\" src=\"../assets/tgolshop.png\" alt=\"dd\">\n    </div>\n    <h1 class=\"h3 mb-3 fw-normal\">로그인</h1>\n    <div class=\"form-floating mb-2\">\n      <input type=\"text\" class=\"form-control\" id=\"floatingInput\" placeholder=\"아이디\" @keyup.enter=\"login\" v-model=\"id\">\n      <label for=\"floatingInput\">아이디</label>\n    </div>\n    <div class=\"form-floating\">\n      <input type=\"password\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"패스워드\" autocomplete=\"off\" @keyup.enter=\"login\" v-model=\"pw\">\n      <label for=\"floatingPassword\">패스워드</label>\n    </div>\n    <div align=\"left\" class=\"mt-1\">\n      <span @click=\"findId\" id=\"find-id\" class=\"ms-1\"> 아이디 찾기 </span> <span style=\"color:darkgray; font-size: small;\">/</span> <span id=\"find-pw\"> 비밀번호 찾기 </span>\n    </div>\n    <button @click=\"login\" class=\"w-100 btn btn-lg btn-success mt-3 mb-2\" style=\"font-weight:bold;\">로그인</button>\n    <button class=\"w-100 btn btn-lg mb-3\" @click=\"signUp\" id=\"naver\" style=\"color:white; font-weight:bold; background-color:#12D308;\">간편 회원가입</button>\n  </div>\n\n  <div v-if=\"findIdModal\">\n    <div class=\"container mt-3 col-9 col-sm-7 col-md-6 col-lg-5 col-xxl-4 border\">\n      <div class=\"mt-3 mb-3\">\n        <h1 class=\"h3 mb-3 fw-normal\">아이디 찾기</h1>\n        <div class=\"form-floating mb-2\">\n          <input type=\"text\" class=\"form-control\" id=\"floatingInput\" placeholder=\"닉네임\" @keyup.enter=\"findIdSubmit\" v-bind:value=\"nickName\" @input=\"inputNickName\">\n          <label for=\"floatingInput\">닉네임</label>\n        </div>\n        <div class=\"form-floating\">\n          <input type=\"text\" class=\"form-control\" id=\"floatingPassword\" placeholder=\"휴대폰번호\" autocomplete=\"off\" @keyup.enter=\"findIdSubmit\" v-model=\"phoneNum\">\n          <label for=\"floatingPassword\">휴대폰번호</label>\n        </div>\n        <button @click=\"findIdSubmit\" class=\" btn btn-danger mt-3 mb-2\" style=\"font-weight:bold;\">아이디 찾기</button>\n        <button @click=\"backPage\" class=\"btn btn-success mt-3 mb-2 ms-1\" style=\"font-weight:bold;\">이전 페이지</button>\n      </div>\n    </div>\n  </div>\n\n  <div v-if=\"getIdModal\">\n    <div class=\"container mt-3 col-9 col-sm-7 col-md-6 col-lg-5 col-xxl-4 border\">\n      <div class=\"mt-3 mb-3\">\n        <h1 class=\"h3 mb-3 fw-normal\">아이디 찾기</h1>\n        <div class=\"mt-3\">\n          <span>고객님의 아이디는 {{ getId }} 입니다.</span>\n        </div>\n        <button @click=\"findIdSubmit\" class=\" btn btn-danger mt-3 mb-2\" style=\"font-weight:bold;\">로그인</button>\n        <button @click=\"backPage\" class=\"btn btn-success mt-3 mb-2 ms-1\" style=\"font-weight:bold;\">비밀번호 재설정</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref } from '@vue/reactivity';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name:'LoginPage',\n  emits:['loginData'],\n  setup(props, {emit}) {\n    const router = useRouter();\n    let id = ref();\n    let pw = ref();\n    let loginData = ref({\n      id : id,\n      pw : pw\n    });\n    let loginModal = ref(true);\n    let findIdModal = ref(false);\n    let findPwModal = ref(false);\n    let nickName = ref('');\n    let phoneNum = ref('');\n    let getId = ref('');\n    let getIdModal = ref(false);\n    let changedPw = ref('');\n    let changePwModal = ref(false);\n\n    axios.get('/api/customer/login-check')\n    .then(res=>{\n      console.log(res.data);\n      if(res.data !== 'not login') {\n        router.push({path:'/'});\n      }\n    })\n\n    function signUp() {\n      router.push({path:'/customer/sign-up'});\n    }\n\n    function login() {\n      axios.post('/api/customer/login', loginData.value)\n      .then(res=>{\n        console.log(res.data);\n        if (res.data === 'login fail') {\n          alert('아이디 또는 비밀번호가 일치하지 않습니다.')\n        } else {\n          emit('loginData', [res.data, false, true]);\n          router.push({path:'/'});\n        }\n      }).catch(err=>{\n        console.log(err);\n      })\n    }\n\n    function findId() {\n      findIdModal.value = true;\n      findPwModal.value = false;\n      loginModal.value = false;\n    }\n\n    function inputNickName(e) {\n      nickName.value = e.target.value;\n    }\n\n    function findIdSubmit() {\n      if(nickName.value === '' || phoneNum.value === '') {\n        alert('정보를 모두 입력해 주십시오');\n      } else {\n        axios.get('/api/customer/findId?nickName=' + nickName.value + \"&phoneNum=\" + phoneNum.value)\n        .then(result=>{\n          if(result.data === 'wrong nickName') {\n            alert('존재하지 않는 닉네임입니다.');\n          } else if(result.data === 'wrong phoneNum') {\n            alert('휴대폰 번호가 일치하지 않습니다.');\n          } else {\n            getId.value = result.data;\n            findIdModal.value = false;\n            getIdModal.value = true;\n          }\n        })\n        .catch(err=>{\n          console.log(err);\n        })\n      }\n    }\n\n    function backPage() {\n      findIdModal.value = false;\n      loginModal.value = true;\n    }\n\n    function clickLoginModal() {\n      loginModal.value = true;\n      getIdModal.value = false;\n      changePwModal.value = false;\n    }\n\n\n\n    return{signUp, login, id, pw, findIdModal, findPwModal, loginModal, findId, nickName, phoneNum, inputNickName, findIdSubmit, backPage,\n    getId, getIdModal, changedPw, changePwModal, };\n  }\n}\n</script>\n\n<style>\n  #naver:hover{\n    background-color: #07B70D !important;\n  }\n  #kakao:hover{\n    background-color: #d8b208!important;\n  }\n\n  #find-id {\n    text-decoration: none;\n    color:darkgray;\n    font-size: small;\n  }\n\n  #find-id:hover {\n    color:black;\n    cursor: pointer;\n  }\n\n  #find-pw {\n    text-decoration: none;\n    color:darkgray;\n    font-size: small;\n  }\n\n  #find-pw:hover {\n    color:black;\n    cursor: pointer;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}