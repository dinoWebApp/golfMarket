{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(\" ㅇ \"), (_openBlock(), _createBlock(_component_router_view, {\n    key: _ctx.$route.fullPath,\n    onLoginData: $setup.loginUpdate\n  }, null, 8 /* PROPS */, [\"onLoginData\"]))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;mFAEE,+BAA2EA;IAA7DC,GAAG,EAAEC,WAAM,CAACC,QAAQ;IAAGC,WAAS,EAAEC","names":["_component_router_view","key","_ctx","fullPath","onLoginData","$setup"],"sourceRoot":"","sources":["/Users/kgj/Library/Mobile Documents/com~apple~CloudDocs/공유/project/TGolShop/frontend/src/components/HomePage.vue"],"sourcesContent":["<template>\n  ㅇ\n  <router-view :key=\"$route.fullPath\" @loginData='loginUpdate'></router-view>\n \n</template>\n\n<script>\nimport { ref } from '@vue/reactivity';\nimport { useRouter } from 'vue-router'\nimport axios from 'axios';\nexport default {\n  name: 'HomePage',\n\n  setup() {\n    const router = useRouter();\n    let loginInfo = ref(false);\n    let myInfo = ref(false);\n    let nickName = ref('');\n    let profileModal = ref(false);\n    axios.get('/api/customer/login-check')\n    .then(res=>{\n      console.log(res.data);\n      if(res.data === 'not login') {\n        loginInfo.value = true;\n        myInfo.value = false;\n      } else {\n        nickName.value = res.data;\n        loginInfo.value = false;\n        myInfo.value = true;\n      }\n    });\n\n    function login() {\n      router.push({path:'/customer/login'});\n    }\n\n    function signUp() {\n      router.push({path:'/customer/sign-up'});\n    }\n\n    function logout() {\n      axios.get('/api/customer/logout')\n      .then(res=>{\n        console.log(res.data);\n        if(res.data === 'logout success') {\n          alert('로그아웃 되었습니다.');\n          loginInfo.value = true;\n          myInfo.value = false;\n          router.push({path:'/'});\n        }\n      }).catch(err=>{\n        console.log(err);\n      })\n    }\n\n    function profileLogout() {\n      axios.get('/api/customer/logout')\n      .then(res=>{\n        console.log(res.data);\n        if(res.data === 'logout success') {\n          alert('로그아웃 되었습니다.')\n          loginInfo.value = true;\n          myInfo.value = false;\n          router.push({path:'/'});\n          profileModal.value = false;\n        }\n      }).catch(err=>{\n        console.log(err);\n      })\n    }\n\n    function loginUpdate(loginData) {\n      nickName.value = loginData[0]\n      loginInfo.value = loginData[1];\n      myInfo.value = loginData[2];\n    }\n\n    function profileClick() {\n      axios.get('/api/customer/login-check')\n      .then(res=>{\n        if (res.data === 'not login') {\n          alert('로그인이 필요합니다.');\n          router.push({path:'/customer/login'});\n        } else profileModal.value = true;\n      })\n    }\n\n    function profileDelete() {\n      profileModal.value = false;\n    }\n\n    function mypage() {\n      router.push({name:'MyPage', query:{nickName:nickName}});\n    }\n\n\n    \n\n    \n    \n\n\n    return {login, signUp, loginInfo, myInfo, nickName, logout, loginUpdate, profileClick, profileModal, profileDelete,\n    profileLogout, mypage};\n  \n  }\n}\n</script>\n\n<style>\n#mypageDelete:hover{\n  background-color:crimson !important;\n}\n\n#mypageDelete:active{\n  background-color:firebrick !important;\n}\n\n#profile-xs{\n  width: 30%;\n  position: fixed;\n  left: 65%;\n  top: 15%;\n  z-index: 999;\n}\n\n#profile-sm{\n  width: 25%;\n  position: fixed;\n  left: 65%;\n  top: 8%;\n  z-index: 999;\n}\n\n#sign-up:hover{\n  background-color:green !important;\n}\n\n#mypage{\n  color:darkgrey;\n  font-size:40px;\n  cursor: pointer;\n  /* float:right; */\n}\n\n/* #mypage-click:active{\n  border-style: none !important;\n} */\n\n.nav-item .menu {\n  color:white;\n  font-weight:bold;\n  font-size:18px;\n}\n\n.nav-item:hover a{\n  color: #2c3e50 !important;\n}\n\n.nav-item:visited a{\n  color: #2c3e50 !important;\n}\n\n.navbar{\n  background-color: #53B300;\n}\n\n.updown {\n  background-color: white;\n  width: 1px;\n  height: 20px;\n}\n/* .dropdown:hover .dropdown-menu {\n  display: block;\n  margin-top: 0;\n} */\n.search_box {\n  /* position: relative; */\n  width: 470px;\n  height: 38px;\n  background-color: #FFFFFF;\n}\n\n.search_in {\n  float: left;\n  height: 37px;\n  line-height: 37px;\n  background: transparent;\n  outline: none;\n  /* padding: 0px 14px; */\n  /* width: 300px; */\n  color: black;\n  border: 0px;\n  font-size: 15px;\n}\n\n.search_inner {\n  border-bottom: solid 3px #33cc00;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}